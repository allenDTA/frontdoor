version: 2.1
references:
  deploy_docker: &deploy_docker
    docker:
      - image: microsoft/dotnet:2.2-sdk
        environment:
          TZ: "/usr/share/zoneinfo/Australia/Sydney"
  circleci_deploy: &circleci_deploy
    docker:
      - image: circleci/node:8-stretch

commands:
  dot_net_build:
    description: "Build dot net project"
    parameters:
      path:
        type: string
    steps:
      - run: 
          name: Dotnet build
          command: |
            cd << parameters.path >>
            dotnet build
  
  dot_net_test:
    description: "Test dot net project"
    parameters:
      path:
        type: string
    steps:
      - run: 
          name: Dotnet test
          command: |
            cd << parameters.path >>
            dotnet test

  npm_build:
    description: "build npm"
    parameters:
      path:
        type: string
    steps:
      - run: 
          name: Build npm
          command: |
            cd << parameters.path >>
            npm install
            npm run build
            npm run lint

  cf_deploy:
    description: "cf deploy"
    parameters:
      cf_url:
        type: string
        default: https://api.system.y.cld.gov.au
      cf_user:
        type: string
        default: $CF_USER_STAGING
      cf_password:
        type: string
        default: $CF_PASSWORD_STAGING
      cf_app_name:
        type: string
      cf_manifest:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Cloud Foundry CLI
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf install-plugin https://github.com/contraband/autopilot/releases/download/0.0.8/autopilot-linux -f
            cf install-plugin https://github.com/govau/cf-run-and-wait/releases/download/0.1/run-and-wait.linux64 -f
            cf -v
      - run:
          name: Deploy
          command: |
            cf login -a << parameters.cf_url >> -o dta -s marketplace -u << parameters.cf_user >> -p << parameters.cf_password >>
            cf zero-downtime-push << parameters.cf_app_name >> -f << parameters.cf_manifest >> --show-app-log

jobs:
  run_npm_builds:
    docker:
      - image: circleci/node:10.15.3-stretch-browsers
    steps:
      - attach_workspace:
          at: .
      - checkout
      - npm_build:
          path: "ui"
      - persist_to_workspace:
          root: .
          paths:
            - "**/*"
    
  deploy_to_rc:
    docker:
      - image: circleci/node:8-stretch
    steps:
      - cf_deploy:
          cf_app_name: rc-frontdoor-ui
          cf_manifest: ui/manifest.rc.yml

  deploy_to_pc:
    docker:
      - image: circleci/node:8-stretch
    steps:
      - cf_deploy:
          cf_app_name: pc-frontdoor-ui
          cf_manifest: ui/manifest.pc.yml

  deploy_to_dev:
    docker:
      - image: circleci/node:8-stretch
    steps:
      - cf_deploy:
          cf_app_name: dev-frontdoor-ui
          cf_manifest: ui/manifest.dev.yml

  deploy_to_production:
    <<: *circleci_deploy
    steps:
      - cf_deploy:
          cf_url: https://api.system.b.cld.gov.au
          cf_user: $CF_USER_PROD
          cf_password: $CF_PASSWORD_PROD
          cf_app_name: frontdoor-ui
          cf_manifest: ui/manifest.prod.yml

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - run_npm_builds:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - deploy_to_rc:
          requires:
            - run_npm_builds
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master
      - deploy_to_dev:
          requires:
            - run_npm_builds
          filters:
            tags:
              ignore: /.*/
            branches:
              only: dev
      - deploy_to_production:
          requires:
            - run_npm_builds
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy_to_pc:
          requires:
            - deploy_to_production
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
